class is SpriteSceneWithEntities imports cape imports cave imports motion:

var gameBackground as BackgroundEntity
var spongebob as SpongebobEntity
var foodEntities as vector<FoodEntity>
var quitButton as TextureSprite
var scoreSprite as TextSprite
var audioManager as AudioManager
var stream as AudioStream
var height as double
var width as double
var timer as int
var score as int

func initialize override
{
	base.initialize()
	timer = 0
	score = 0
	height = getReferenceHeight()
	width = getReferenceWidth()
	gameBackground = new BackgroundEntity()
	spongebob = new SpongebobEntity()
	addEntity(gameBackground)
	addEntity(spongebob)
	foodEntities = new vector<FoodEntity>
	quitButton = addTextureSpriteForSize(createTextureForImageResource("quitbutton"), 0.2 * width, 0.1 * height)
	var txtProp = TextProperties.forText("Score: ")
	txtProp.setFontSizeRelative(20.0)
	scoreSprite = addTextSprite(txtProp)
	scoreSprite.move(0.8 * width, 0.0)
	audioManager = AudioManager.forApplication(context)
	if(audioManager != null) {
		stream = audioManager.getStreamForResource("bmusic")
	}
	quitButton.move(0.95 * width - quitButton.getWidth(), 0.9 * height)
	onTimeToPlayStream()
}

func removeFoodEntity(f as FoodEntity) as void
{
	removeEntity(f)
	Vector.removeValue(foodEntities, f)
}

func getSpongebob as SpongebobEntity
{
	return spongebob
}

func mainMenu
{
	pushScene(new MainScene())
}

func getScore as int
{
	return score
}

func addPoints(n as int)
{
	score += n
}

func tick(gameTime as TimeValue, delta as double) override
{
	base.tick(gameTime, delta)
	timer++
	scoreSprite.setText(String.append("Score: ", score))
	if((timer % 500) == 0) {
		var food = new FoodEntity()
		addEntity(food)
		foodEntities += food
	}
}

func stopStream
{
	if(stream != null) {
		stream.stop()
	}
}

func onTimeToPlayStream
{
	if(stream != null) {
		stream.play()
		stream.setLooping(true)
	}
}

func onPointerEvent(event as PointerEvent) override
{
	base.onPointerEvent(event)
	if(event.isConsumed) {
		return
	}
	if(event.action == PointerEvent.DOWN) {
		if(event.isInside(quitButton.getX(), quitButton.getY(), quitButton.getWidth(), quitButton.getHeight())) {
			mainMenu()
		}
	}
}

func cleanup override
{
	removeAllSprites()
	stopStream()
}
