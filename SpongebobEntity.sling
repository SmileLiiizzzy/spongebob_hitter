class is SpriteEntity is KeyListener is PointerListener imports cape imports cave imports motion:

var spongebobSprite as TextureSprite
var hitScene as HitScene
var spongeX as double
var spongeY as double
var ptX as double
var ptY as double
var height as double
var width as double
var isKeyUp = false
var isKeyRight = false
var isKeyDown = false
var isKeyLeft = false
var isClick = false
var timer as int

func createSprite override as Sprite
{
	hitScene = getScene() as HitScene
	isClick = false
	var spongebob = scene.createTextureForImageResource("spongebob")
	height = layer.getReferenceHeight()
	width = layer.getReferenceWidth()
	spongebobSprite = SpriteUtil.addTextureSpriteForSize(scene, layer, spongebob, 0.1 * width, 0.12 * height)
	spongebobSprite.move(0.0, height)
	return spongebobSprite
}

func onKeyEvent(event as KeyEvent)
{
	var str = event.getStringValue()
	if(event.getAction() == 1) {
		if(String.equalsIgnoreCase(str, "w")) {
			isKeyUp = true
			hitScene.spongeBullet()
		}
		else if(String.equalsIgnoreCase(str, "d")) {
			isKeyRight = true
			hitScene.spongeBullet()
		}
		else if(String.equalsIgnoreCase(str, "s")) {
			isKeyDown = true
			hitScene.spongeBullet()
		}
		else if(String.equalsIgnoreCase(str, "a")) {
			isKeyLeft = true
			hitScene.spongeBullet()
		}
		else {
			PRINT("Unhandled key event: `" .. event.getStringValue() .. "'")
		}
	}
	if(event.getAction() == 2) {
		isKeyUp = false
		isKeyRight = false
		isKeyDown = false
		isKeyLeft = false
	}
}

func onPointerEvent(event as PointerEvent) as bool
{
	if(event.isConsumed) {
		return false
	}
	if(event.action == PointerEvent.DOWN) {
		isClick = true
	}
	if(event.action == PointerEvent.UP) {
		isClick = false
	}
	ptX = event.getX()
	ptY = event.getY()
	return false
}

func tick(gameTime as TimeValue, delta as double) override
{
	base.tick(gameTime, delta)
	spongeX = sprite.getX()
	spongeY = sprite.getY()
	timer++
	if(isClick) {
		spongeX -= (spongeX - (ptX + 0.5 * spongebobSprite.getWidth())) / 20
		spongeY -= (spongeY - (ptY + 0.5 * spongebobSprite.getHeight())) / 20
		spongebobSprite.move(spongeX, spongeY)
		if((timer % 100) == 0) {
			hitScene.spongeBullet()
		}
	}
	if(spongeX < 0.0) {
		sprite.move(0.0, spongeY)
	}
	if(spongeY < 0.0) {
		sprite.move(spongeX, 0.0)
	}
	if(spongeX >= width - sprite.getWidth()) {
		sprite.move(width - sprite.getWidth(), spongeY)
	}
	if(spongeY >= height - sprite.getHeight()) {
		sprite.move(spongeX, height - sprite.getHeight())
	}
	if(isKeyUp) {
		sprite.move(spongeX, spongeY - height * 0.005)
	}
	if(isKeyRight) {
		sprite.move(spongeX + width * 0.005 spongeY)
	}
	if(isKeyDown) {
		sprite.move(spongeX, spongeY + height * 0.005)
	}
	if(isKeyLeft) {
		sprite.move(spongeX - width * 0.005, spongeY)
	}
}

func cleanup override
{
	layer.removeSprite(spongebobSprite)
}
