class is SpriteEntity imports cape imports cave imports motion:

var foodSprite as TextureSprite
var gameScene as GameScene
var spongebob as SpongebobEntity
var height as double
var width as double
var speed as double
var fX as double
var fY as double
var food as int
var score as int

func createSprite override as Sprite
{
	var random = new Random()
	var food1 = scene.createTextureForImageResource("kelpshake")
	var food2 = scene.createTextureForImageResource("donut")
	var food3 = scene.createTextureForImageResource("krabbypatty")
	fX = 0.0
	fY = 0.0
	score = 0
	height = layer.getReferenceHeight()
	width = layer.getReferenceWidth()
	gameScene = getScene() as GameScene
	spongebob = gameScene.getSpongebob()
	food = random.nextInt(1,4)
	if(food == 1) {
		foodSprite = SpriteUtil.addTextureSpriteForSize(scene, layer, food1, 0.03 * width, 0.05 * height)
		speed = 0.01
	}
	else if(food == 2) {
		foodSprite = SpriteUtil.addTextureSpriteForSize(scene, layer, food2, 0.04 * width, 0.05 * height)
		speed = 0.1
	}
	else if(food == 3) {
		foodSprite = SpriteUtil.addTextureSpriteForSize(scene, layer, food3, 0.05 * width, 0.05 * height)
		speed = 0.05
	}
	foodSprite.move(width, (height - foodSprite.getHeight()) * random.nextDouble())
	return foodSprite
}

func isCollide(spriteA as Sprite, spriteB as Sprite) static as bool
{
	var collide = false
	var fHeight as double
	var fWidth as double
	var totalA as double
	var totalB as double
	var foodX as double
	var foodY as double
	fHeight = spriteA.getHeight() * 0.5
	fWidth = spriteA.getWidth() * 0.5
	totalA = fHeight + fWidth
	foodX = spriteA.getX() - spriteB.getX()
	foodY = spriteA.getY() - spriteB.getY()
	totalB = Math.sqrt(foodX * foodX + foodY * foodY)
	if(totalB < totalA) {
		collide = true
	}
	return(collide)
}

func tick(gameTime as TimeValue, delta as double) override
{
	base.tick(gameTime, delta)
	fX = foodSprite.getX()
	fY = foodSprite.getY()
	spongebob = gameScene.getSpongebob()
	if(isCollide(spongebob, foodSprite)) {
		score++
		layer.removeSprite(foodSprite)
		PRINT("LSFJALSDJFLSDFLKAS")
		PRINT(score)
	}
	foodSprite.move(fX - delta * speed, fY)
	if(fX < 0.0) {
		gameScene.removeFoodEntity(this)
	}
}

func cleanup override
{
	layer.removeSprite(foodSprite)
}
