class is SpriteSceneWithEntities imports cape imports cave imports motion #mainScene:

var backgroundSprite as TextureSprite
var foodButton as TextureSprite
var hitButton as TextureSprite
var helpButton as TextureSprite
var audioManager as AudioManager
var stream as AudioStream
var height as double
var width as double

func initialize override
{
	base.initialize()
	height = getReferenceHeight()
	width = getReferenceWidth()
	backgroundSprite = addTextureSpriteForSize(createTextureForImageResource("background"), width, height)
	foodButton = addTextureSpriteForSize(createTextureForImageResource("foodbutton"), 0.25 * width, 0.1 * height)
	hitButton = addTextureSpriteForSize(createTextureForImageResource("hitbutton"), 0.25 * width, 0.1 * height)
	helpButton = addTextureSpriteForSize(createTextureForImageResource("helpbutton"), 0.25 * width, 0.1 * height)
	audioManager = AudioManager.forApplication(context)
	if(audioManager != null) {
		stream = audioManager.getStreamForResource("music")
	}
	foodButton.move(0.1 * width, 0.5 * height)
	hitButton.move(0.1 * width, 0.65 * height)
	helpButton.move(0.1 * width, 0.8 * height)
	onTimeToPlayStream()
}

func foodGame
{
	pushScene(new FoodScene())
}

func hitGame
{
	pushScene(new HitScene())
}

func help
{
	pushScene(new HelpScene())
}
func onPointerEvent(event as PointerEvent) override
{
	base.onPointerEvent(event)
	if(event.isConsumed) {
		return
	}
	if(event.action == PointerEvent.DOWN) {
		if(event.isInside(foodButton.getX(), foodButton.getY(), foodButton.getWidth(), foodButton.getHeight())) {
			foodGame()
		}
		if(event.isInside(hitButton.getX(), hitButton.getY(), hitButton.getWidth(), hitButton.getHeight())) {
			hitGame()
		}
		if(event.isInside(helpButton.getX(), helpButton.getY(), helpButton.getWidth(), helpButton.getHeight())) {
			help()
		}
	}
}

func stopStream
{
	if(stream != null) {
		stream.stop()
	}
}

func onTimeToPlayStream
{
	if(stream != null) {
		stream.play()
		stream.setLooping(true)
	}
}

func cleanup override
{
	removeAllSprites()
	stopStream()
}
